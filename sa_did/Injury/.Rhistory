if (!is.numeric(tlist)) {
warning("not guaranteed to order time periods correclty if they are not numeric")
}
# put in blank xformla if no covariates
if (is.null(xformla)) {
xformla <- ~1
}
# If repeated cross section, allow for null idname
if(is.null(idname) && (panel == FALSE)){
dta$id <- seq(1:nrow(dta))
idname <- "id"
}
# sort data with respect to id and time
dta <- dta[base::order(dta[,idname], dta[,tname]),]
# If panel, make it a balanced data set
if (panel) {
dta <- BMisc::makeBalancedPanel(dta, idname, tname)
}
# Outcome variable will be denoted by y
dta$y <- dta[, yname]
# group will be denoted by D
dta$D <- dta[, dname]
# Post dummy will be denoted by post
dta$post <- as.numeric(dta[,tname] == tlist[2])
# matrix of covariates
covariates <- stats::model.matrix(xformla,
model.frame(~ .,  data=dta, na.action=na.pass) )
#check if covariates and group are time invariant in the panel data case.
# matrix of covariates for pre-period and post periods
covariates_pre <- stats::model.matrix(xformla, data=subset(dta, dta$post==0))
covariates_post <- stats::model.matrix(xformla, data=subset(dta, dta$post==1))
d_pre <- subset(dta$D, dta$post==0)
d_post <- subset(dta$D, dta$post==1)
w_pre <- subset(dta$w, dta$post==0)
w_post <- subset(dta$w, dta$post==1)
if (panel) {
if (!all(covariates_pre==covariates_post)) {
stop("Error: covariates should be time invariant, and there should be no missing data.")
}
if (!all(d_pre==d_post)) {
stop("Error: group indicator must be time invariant.")
}
if (!all(w_pre==w_post)) {
stop("Error: weights must be time invariant.")
}
}
# check against very small groups
gsize <- stats::aggregate(dta$D, by=list(dta$D), function(x) length(x)/length(tlist))
# how many in each group before give warning
# 5 is just a buffer, could pick something else, but seems to work fine
reqsize <- length(BMisc::rhs.vars(xformla)) + 5
# which groups to warn about
gsize <- subset(gsize, gsize$x < reqsize) # x is name of column from gsize
# warn if some groups are small
if (nrow(gsize) > 0) {
warning(paste0(" Either treatment or the comparison group in your dataset is fairly small. Proceed with caution."))
}
#-----------------------------------------------------------------------------
# Only use this smaller dataset
dta <- as.data.frame(cbind(y = dta$y, D = dta$D, post = dta$post, w = dta$w, covariates))
# Remove NAs
dta <- dta[stats::complete.cases(dta), ]
dim(dta)
devtools::install_github("pedrohcgs/DRDID")
devtools::install_github("r-lib/usethis")
devtools::install_github("r-lib/usethis")
install.packages("openssl")
#---------------------------------------------------
#      Application: Meyer, Viscusi and Durbin (1995, AER)
#---------------------------------------------------
#-----------------------------------------------------------------------------
# Startup - clear memory, load packages, set working directory, and import the dataset
# Clear memory
rm(list=ls())
library(wooldridge)
#library(sem)
library(here)
library(DRDID)
library(fixest)
#-----------------------------------------------------------------------------
# import the data
injury <- wooldridge::injury
# Get unit's id (repeated cross section)
injury$id <- 1:dim(injury)[1]
#-----------------------------------------------------------------------------
# create two state subsets
# Kentucky subset
injury_ky <- subset(injury, injury$ky==1)
# Michigan subset
injury_mi <- subset(injury, injury$mi==1)
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
#     A. Kentucky Sample
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Unconditional DiD analysis
#-----------------------------------------------------------------------------
# Duration of benefits
twfe_ky_dur <- fixest::feols(durat ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_dur)
# Log of duration of benefits
twfe_ky_ldur <- fixest::feols(ldurat ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_ldur)
# Medical cost
twfe_ky_med <- fixest::feols(totmed ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_med)
# log of Medical cost
twfe_ky_lmed <- fixest::feols(ltotmed ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_lmed)
#-----------------------------------------------------------------------------
# Conditional DiD analysis
#-----------------------------------------------------------------------------
# What kind of covariates we "should" include?!
# Reported injuries are potentially affected by policy, so we will NOT include them
dr_ky_dur <- drdid(yname = "durat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage + lprewage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "durat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + age + prewage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "durat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage + lprewage,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage + lprewage,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf ,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
+ lprewage
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage + lprewage,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage + prewage,
data = injury_ky,
panel = FALSE,
estMethod = "trad",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur <- drdid(yname = "durat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "multiplier"
)
dr_ky_dur
dr_ky_dur <- drdid(yname = "durat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
dr_ky_dur
twfe_ky_dur
# Doubly Robust
dr_ky_ldur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
dr_ky_ldur
dr_ky_ldur
twfe_ky_ldur
dr_ky_ldur
# Doubly Robust: Medical cost
dr_ky_med <- drdid(yname = "totmed",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
dr_ky_med
# Doubly Robust: Log Medical cost
dr_ky_lmed <- drdid(yname = "totmed",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
dr_ky_lmed
twfe_ky_lmed
# Doubly Robust: Log Medical cost
dr_ky_lmed <- drdid(yname = "ltotmed",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
grid_y <- 1:30
cdf_duration <- mean( injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1] <= grid_y)
cdf_duration
cdf_duration <- mean( (injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1] <= grid_y))
(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1] <= grid_y)
cdf_duration <- colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_y, "<="))
cdf_duration
grid_y <- 1:30
cdf_duration <- colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_y, "<=")) +
colMeans(outer(injury_ky$durat[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))  -
colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_y, "<="))
cdf_duration
plot(cdf_duration)
colMeans(outer(injury_ky$durat[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))
colMeans(outer(injury_ky$durat[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))  -
colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_y, "<="))
plot(grid_y, cdf_duration, tyep = "l")
grid_y <- 1:30
cdf_duration <- colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_y, "<=")) +
colMeans(outer(injury_ky$durat[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))  -
colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_y, "<="))
plot(grid_y, cdf_duration, type = "l")
grid_y <- 0:30
cdf_duration <- colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_y, "<=")) +
colMeans(outer(injury_ky$durat[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))  -
colMeans(outer(injury_ky$durat[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_y, "<="))
plot(grid_y, cdf_duration, type = "l")
pdf_duration = c(cdf_duration[1], cdf_duration[2:31] - cdf_duration[1:30])
plot(grid_y, pdf_duration, type = "l")
quantile
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,1,0.01))
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,1,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_y, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_y, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_y, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,1,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
injury_ky$totmed
quantile(injury_ky$totmed, probs = seq(0,1,0.01))
grid_totmed <- sort(injury_ky$totmed)
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,0.9,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,0.95,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,0.99,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,0.95,0.01))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
grid_totmed <- quantile(injury_ky$totmed, probs = seq(0,0.95,0.05))
cdf_totmed <- colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==1 & injury_ky$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_ky$totmed[injury_ky$afchnge==0 & injury_ky$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
pdf_duration = c(cdf_duration[1], cdf_duration[2:31] - cdf_duration[1:30])
plot(grid_y, pdf_duration, type = "l")
grid_totmed
length(grid_totmed)
pdf_totmed = c(cdf_totmed[1], cdf_totmed[2:length(grid_totmed)] - cdf_totmed[1:(length(grid_totmed)-1)])
plot(grid_y, pdf_duration, type = "l")
grid_duration <- 0:30
grid_duration <- 0:30
cdf_duration <- colMeans(outer(injury_mi$durat[injury_mi$afchnge==0 & injury_mi$highearn==1],
grid_duration, "<=")) +
colMeans(outer(injury_mi$durat[injury_mi$afchnge==1 & injury_mi$highearn==0],
grid_duration, "<="))  -
colMeans(outer(injury_mi$durat[injury_mi$afchnge==0 & injury_mi$highearn==0],
grid_duration, "<="))
plot(grid_duration, cdf_duration, type = "l")
pdf_duration = c(cdf_duration[1], cdf_duration[2:31] - cdf_duration[1:30])
plot(grid_duration, pdf_duration, type = "l")
grid_totmed <- quantile(injury_mi$totmed, probs = seq(0,0.95,0.05))
cdf_totmed <- colMeans(outer(injury_mi$totmed[injury_mi$afchnge==0 & injury_mi$highearn==1],
grid_totmed, "<=")) +
colMeans(outer(injury_mi$totmed[injury_mi$afchnge==1 & injury_mi$highearn==0],
grid_totmed, "<="))  -
colMeans(outer(injury_mi$totmed[injury_mi$afchnge==0 & injury_mi$highearn==0],
grid_totmed, "<="))
plot(grid_totmed, cdf_totmed, type = "l")
pdf_totmed = c(cdf_totmed[1], cdf_totmed[2:length(grid_totmed)] - cdf_totmed[1:(length(grid_totmed)-1)])
plot(grid_y, pdf_duration, type = "l")
library(wooldridge)
rm(list=ls())
library(wooldridge)
#library(sem)
library(here)
library(DRDID)
library(fixest)
injury <- wooldridge::injury
view(injury)
View(injury)
#---------------------------------------------------
#      Application: Meyer, Viscusi and Durbin (1995, AER)
#---------------------------------------------------
#-----------------------------------------------------------------------------
# Startup - clear memory, load packages, set working directory, and import the dataset
# Clear memory
rm(list=ls())
rm(list=ls())
library(wooldridge)
#library(sem)
library(here)
library(DRDID)
library(fixest)
#-----------------------------------------------------------------------------
# import the data
injury <- wooldridge::injury
# Get unit's id (repeated cross section)
injury$id <- 1:dim(injury)[1]
injury_ky <- subset(injury, injury$ky==1)
# Michigan subset
injury_mi <- subset(injury, injury$mi==1)
twfe_ky_dur <- fixest::feols(durat ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_dur)
twfe_ky_ldur <- fixest::feols(ldurat ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_ldur)
twfe_ky_med <- fixest::feols(totmed ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_med)
twfe_ky_lmed <- fixest::feols(ltotmed ~ highearn + afchnge + I(highearn * afchnge),
data = injury_ky,
cluster = ~id)
summary(twfe_ky_lmed)
dr_ky_dur <- drdid(yname = "durat", #dependent variable
tname = "afchnge", #time dummy (=1 if post)
idname = "id", #unit identifier
dname = "highearn", #treatment dummy (=1 if post)
xformla = ~ male + married + manuf + construc + lage, #covariates
data = injury_ky,
panel = FALSE,
estMethod = "imp", #always use this option
boot = TRUE, #bootstrapped SEs
boot.type = "weighted"
)
summary(twfe_ky_lmed)
dr_ky_ldur <- drdid(yname = "ldurat",
tname = "afchnge",
idname = "id",
dname = "highearn",
xformla = ~ male + married + manuf + construc + lage,
data = injury_ky,
panel = FALSE,
estMethod = "imp",
boot = TRUE,
boot.type = "weighted"
)
summary(dr_ky_lmed)
summary(dr_ky_ldur)
